- name: Create prometheus user
  user:
    name: prometheus
    shell: /sbin/nologin
  when: prometheus_state == 'present'

- name: Download Prometheus
  get_url:
    url: https://github.com/prometheus/prometheus/releases/download/v2.47.0/prometheus-2.47.0.linux-amd64.tar.gz
    dest: /tmp/prometheus.tar.gz
  when: prometheus_state == 'present'

- name: Extract Prometheus
  unarchive:
    src: /tmp/prometheus.tar.gz
    dest: /opt/
    remote_src: yes
  when: prometheus_state == 'present'

- name: Move Prometheus binaries
  copy:
    remote_src: yes
    src: "/opt/prometheus-2.47.0.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: '0755'
  loop:
    - prometheus
    - promtool
  when: prometheus_state == 'present'

- name: Create prometheus config
  copy:
    dest: /etc/prometheus.yml
    content: |
      global:
        scrape_interval: 15s
      scrape_configs:
        - job_name: 'node'
          static_configs:
            - targets: ['localhost:9100']
  when: prometheus_state == 'present'

- name: Set ownership on Prometheus config
  file:
    path: /etc/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: '0644'
  when: prometheus_state == 'present'

- name: Create Prometheus data directory
  file:
    path: /var/lib/prometheus
    state: directory
    owner: prometheus
    group: prometheus
    mode: '0755'
  when: prometheus_state == 'present'

- name: Create systemd unit for Prometheus
  copy:
    dest: /etc/systemd/system/prometheus.service
    content: |
      [Unit]
      Description=Prometheus
      After=network.target

      [Service]
      User=prometheus
      ExecStart=/usr/local/bin/prometheus --config.file=/etc/prometheus.yml --storage.tsdb.path=/var/lib/prometheus
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target
  when: prometheus_state == 'present'


- name: Enable and start Prometheus
  systemd:
    name: prometheus
    enabled: true
    state: started
    daemon_reload: true
  when: prometheus_state == 'present'

- name: Stop Prometheus service if removing
  systemd:
    name: prometheus
    state: stopped
    enabled: false
  when: prometheus_state == 'absent'
  ignore_errors: true

- name: Remove systemd unit
  file:
    path: /etc/systemd/system/prometheus.service
    state: absent
  when: prometheus_state == 'absent'

- name: Remove prometheus config
  file:
    path: /etc/prometheus.yml
    state: absent
  when: prometheus_state == 'absent'

- name: Remove prometheus user
  user:
    name: prometheus
    state: absent
  when: prometheus_state == 'absent'
